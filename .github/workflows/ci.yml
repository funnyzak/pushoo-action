name: CI
on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
  workflow_dispatch:
env:
  DIST_ARCHIVE_PREFIX_NAME: ${{ github.event.repository.name }}

jobs:
  action-test:
    name: Action test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies and build
        run: |
          npm ci
          npm run build
      - name: Pushoo Push
        uses: ./.
        with:
            platforms: ifttt,wecombot,bark,dingtalk
            tokens: ${{ secrets.PUSH_TOKEN }}
            content: |
              # ${{ github.event.repository.name }} Action Test Message
              ## trigger: ${{ github.event_name }} at ${{ github.event.head_commit.timestamp }}
              ## commit message: ${{ github.event.head_commit.message }}
              ## commit url: ${{ github.event.head_commit.url }}
              ## commit author: ${{ github.event.head_commit.author.name }}
              ## commit email: ${{ github.event.head_commit.author.email }}
              ## commit id: ${{ github.event.head_commit.id }}
            title: |
              ${{ github.repository }} ${{ github.event_name }} Message
            options: '{"bark": { "url": "https://github.com/${{github.repository}}" }, "dingtalk": {"msgtype": "markdown"}}'
            debug: false

  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/')
    needs: action-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 16.x ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: main
      - name: Get the version
        id: get_version
        run: |
          echo "PACKAGE_VERSION_NAME=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
          echo "PACKAGE_NAME=$(node -p "require('./package.json').name")" >> $GITHUB_ENV
          echo "COMMIT_ID=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
          echo "VERSION=$(echo $GITHUB_REF | cut -d / -f 3)" >> $GITHUB_ENV
          echo "TAG_NAME=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          echo "BUILD_TIMESTAMP=$(date +%s)" >> $GITHUB_ENV
          echo "BUILD_TIME=$(date "+%Y-%m-%d-%H-%M")" >> $GITHUB_ENV
      - name: Set dist name
        id: set_dist_name
        run: |
          echo "DIST_ZIP_NAME=$(echo "${{ env.DIST_ARCHIVE_PREFIX_NAME }}-${{ env.PACKAGE_VERSION_NAME }}-${{env.BUILD_TIMESTAMP}}-${{ env.COMMIT_ID }}.zip")" >> $GITHUB_ENV
      - name: Build changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v2.9.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          configuration: ".github/config/changelog_configuration.json"
          ignorePreReleases: "false"
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org/'
          cache: 'npm'
      - name: Install dependencies and build
        run: |
          npm ci
          npm run build
      - name: Release package
        uses: papeloto/action-zip@v1
        with:
          files: dist/ READEME.md package.json LICENSE action.yml
          recursive: false
          dest: |
            ${{ env.DIST_ZIP_NAME }}.zip
      # - name: Commit changes
      #   uses: stefanzweifel/git-auto-commit-action@v4
      #   with:
      #     # branch: main
      #     tagging_message: ${{ env.TAG_NAME }}
      #     commit_user_name: Leon
      #     commit_user_email: silenceace@gmail.com
      #     commit_author: leon <silenceace@gmail.com>
      #     commit_options: '--no-verify'
      #     push_options: '--force'
      #     repository: .
      #     commit_message: ${{ env.PACKAGE_VERSION_NAME }}
      #     file_pattern: dist
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.PACKAGE_VERSION_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          body: ${{steps.build_changelog.outputs.changelog}}
          files: |
            ${{ env.DIST_ZIP_NAME }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}

  push-release-message:
    name: Push release message
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - name: Push message
        uses: funnyzak/pushoo-action@main
        with:
          platforms: ifttt,wecombot,bark
          tokens: ${{ secrets.PUSH_TOKEN }}
          content: |
            # ${{ github.event.repository.name }} Released
            ## trigger: ${{ github.event_name }} at ${{ github.event.head_commit.timestamp }}
            ## commit message: ${{ github.event.head_commit.message }}
            ## commit url: ${{ github.event.head_commit.url }}
            ## commit author: ${{ github.event.head_commit.author.name }}
            ## commit email: ${{ github.event.head_commit.author.email }}
            ## commit id: ${{ github.event.head_commit.id }}
          title: |
            ${{ github.repository }} ${{ github.event_name }} Message
          options: '{"bark": { "url": "https://github.com/${{github.repository}}" }}'
          debug: false
